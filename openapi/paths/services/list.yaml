get:
  operationId: listServicesDeployments
  tags: [services]
  summary: List all service deployments
  description: |
    **List all service deployments**

    Retrieve all service deployments, with optional filters:
    - `cluster_id`: filter by cluster ID

  parameters:
    - name: cluster_id
      in: query
      description: |
        Only return services that are associated with this cluster.
      required: false
      schema:
        type: string
        format: uuid

  responses:
    '200':
      $ref: '../../components/responses/services-list-response.yaml'
    '404':
      $ref: '../../components/responses/error-response.yaml'
      useExample: services-not-found
    '500':
      $ref: '../../components/responses/error-response.yaml'
      useExample: server-error

post:
  operationId: createServiceDeployment
  tags: [services]
  summary: Create a service deployment
  description: |
    **Create a service deployment**

    Create a new service deployment.

    **Parameters**

    - `name`: The name of the service deployment
    - `cluster_id`: The ID of the cluster to deploy the service to
    - `template`: The service template to use for the service deployment

  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../../components/requests/service-deployment-create-request.yaml'
  responses:
    '201':
      $ref: '../../components/responses/service-create-response.yaml'
    '400':
      $ref: '../../components/responses/error-response.yaml'
      useExample: bad-request
    '409':
      $ref: '../../components/responses/error-response.yaml'
      useExample: workspace-already-exists
    '500':
      $ref: '../../components/responses/error-response.yaml'
      useExample: server-error